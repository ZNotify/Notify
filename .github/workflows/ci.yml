name: Build and release

on:
  push:
    branches:
      - master

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDDTHHmmss
          utcOffset: "+08:00"

      - uses: actions/checkout@v3

      - name: Fetch tags
        run: git fetch --prune --unshallow --tags

      - name: Grant permission for scripts
        run: chmod +x ./scripts/*.sh

      - name: Check should release
        id: release
        run: ./scripts/release_check.sh

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - uses: gradle/gradle-build-action@v2
        with:
          arguments: assembleRelease bundlePlayRelease --scan
        env:
          PASSWORD: "${{ secrets.PASSWORD }}"

      - name: PreRelease Package
        uses: marvinpinto/action-automatic-releases@latest
        if: steps.release.outputs.release == 'false'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "nightly"
          prerelease: true
          files: |
            app/build/outputs/apk/github/release/*
            app/build/outputs/apk/free/release/app-free-release.apk
            app/build/outputs/apk/appcenter/release/app-appcenter-release.apk

      - name: Release Package
        uses: marvinpinto/action-automatic-releases@latest
        if: steps.release.outputs.release == 'true'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.release.outputs.version }}"
          prerelease: false
          files: |
            app/build/outputs/apk/github/release/*
            app/build/outputs/apk/free/release/app-free-release.apk

      - name: Get apk info
        id: apk-info
        uses: hkusu/apk-info-action@v1
        with:
          apk-path: app/build/outputs/apk/appcenter/release/app-appcenter-release.apk

      - name: Setup AppCenter CLI
        run: |
          npm install -g appcenter-cli

      - name: Upload artifact to App Center
        run: |
          ./scripts/appcenter.sh
        shell: bash
        env:
          VERSION_CODE: ${{ steps.apk-info.outputs.version-code }}
          VERSION_NAME: ${{ steps.apk-info.outputs.version-name }}
          APPCENTER_TOKEN: ${{ secrets.APP_CENTER_TOKEN }}

      - name: Create whatsNew
        if: steps.release.outputs.release == 'true'
        run: |
            ./scripts/whats_new.sh
        env:
          VERSION: ${{ steps.release.outputs.version }}

      - name: Upload Android Release to Play Store
        uses: r0adkll/upload-google-play@v1.0.18
        if: steps.release.outputs.release == 'true'
        with:
          releaseFiles: app/build/outputs/bundle/playRelease/app-play-release.aab
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: top.learningman.push
          track: beta
          mappingFile: app/build/outputs/mapping/playRelease/mapping.txt
          whatsNewDirectory: whatsNew
